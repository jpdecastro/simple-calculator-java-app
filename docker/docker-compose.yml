version: '3'

services:
  jenkins:
    image: jenkinsci/blueocean
    ports:
      - "8082:8080"
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    volumes:
      - $HOME:/home
      - ./jenkins-data:/var/jenkins_home
      - ./jenkins-docker-certs:/certs/client:ro
    networks:
      - devnet
  jenkins-dind:
    image: docker:dind
    container_name: jenkins-dind
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=certs
    volumes:
      - $HOME:/home
      - ./jenkins-data:/var/jenkins_home
      - ./jenkins-docker-certs:/certs/client
    networks:
      devnet:
        aliases:
          - docker
  sonarqube:
    image: sonarqube:7.1-alpine
    ports:
      - "9091:9000"
      - "9092:9092"
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=v07IGCFCF83Z95NX
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
    networks:
      - devnet
  postgres:
    image: postgres:9.6.19
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=v07IGCFCF83Z95NX
      - POSTGRES_DB=sonarqube
    volumes:
      - ./sonarqube_db:/var/lib/postgresql
      # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
      - ./sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - devnet
volumes:
  jenkins-docker-certs:
  jenkins-data:
networks:
  devnet:
    driver: bridge